# Generated by Django 2.2.7 on 2020-07-19 09:24

from django.db import migrations, models
import django.db.models.deletion
import mapbox_location_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('detail', models.TextField(blank=True)),
                ('is_chatActive', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=12)),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/')),
                ('zone', models.CharField(choices=[('AKB', 'اکباتان'), ('VALI', 'ولی عصر'), ('CHTGR', 'چیتگر'), ('AGHD', 'اقدسیه'), ('ARG', 'آرژانتین'), ('OTHER', 'حومه شهر'), ('KSHV', 'بلوارکشاورز')], default='OTHER', max_length=20)),
                ('city', models.CharField(choices=[('yazd', 'یزد'), ('tehran', 'تهران')], default='tehran', max_length=20)),
                ('is_immediate', models.BooleanField(default=False)),
                ('location', mapbox_location_field.models.LocationField(blank=True, map_attrs={'center': [0, 0], 'marker_color': 'blue'}, null=True)),
                ('prod_year', models.PositiveSmallIntegerField()),
                ('sell_choice', models.CharField(choices=[('sell', 'فروش'), ('rent', 'اجاره'), ('need', 'درخواستی')], default='sell', max_length=20)),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('is_exchange', models.BooleanField(default=False)),
                ('function', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('detail', models.TextField(blank=True)),
                ('is_chatActive', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=12)),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/')),
                ('zone', models.CharField(choices=[('AKB', 'اکباتان'), ('VALI', 'ولی عصر'), ('CHTGR', 'چیتگر'), ('AGHD', 'اقدسیه'), ('ARG', 'آرژانتین'), ('OTHER', 'حومه شهر'), ('KSHV', 'بلوارکشاورز')], default='OTHER', max_length=20)),
                ('city', models.CharField(choices=[('yazd', 'یزد'), ('tehran', 'تهران')], default='tehran', max_length=20)),
                ('is_immediate', models.BooleanField(default=False)),
                ('is_exchange', models.BooleanField(default=False)),
                ('location', mapbox_location_field.models.LocationField(blank=True, map_attrs={'center': [0, 0], 'marker_color': 'blue'}, null=True)),
                ('sell_choice', models.CharField(choices=[('sell', 'فروش'), ('rent', 'اجاره'), ('need', 'درخواستی')], default='sell', max_length=20)),
                ('area', models.IntegerField(default=0)),
                ('publisher', models.CharField(choices=[('person', 'شخص'), ('amlak', 'املاک')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApartmantBuy',
            fields=[
                ('room_num', models.IntegerField(default=0)),
                ('year_of_build', models.IntegerField(default=0)),
                ('floor', models.IntegerField(default=1)),
                ('elevator', models.BooleanField(default=True)),
                ('parking', models.BooleanField(default=True)),
                ('depot', models.BooleanField(default=True)),
                ('apartmant_Property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
                ('nstional_id', models.CharField(blank=True, max_length=20, null=True)),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.property',),
        ),
        migrations.CreateModel(
            name='ApartmantRent',
            fields=[
                ('room_num', models.IntegerField(default=0)),
                ('year_of_build', models.IntegerField(default=0)),
                ('floor', models.IntegerField(default=1)),
                ('elevator', models.BooleanField(default=True)),
                ('parking', models.BooleanField(default=True)),
                ('depot', models.BooleanField(default=True)),
                ('apartmant_Property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
                ('deposit_price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('rent_price', models.DecimalField(decimal_places=3, max_digits=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.property',),
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('nstional_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_haveDoc', models.BooleanField(default=True)),
                ('commerical_Property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.property',),
        ),
        migrations.CreateModel(
            name='HeavyCar',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Car')),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.car',),
        ),
        migrations.CreateModel(
            name='OldProperty',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.property',),
        ),
        migrations.CreateModel(
            name='SedanCar',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Car')),
                ('brand', models.CharField(max_length=20, null=True)),
                ('car_model', models.CharField(max_length=20, null=True)),
                ('buy_type', models.CharField(blank=True, choices=[('cash', 'نقدی'), ('semiCash', 'نقدی-قسطی'), ('lean', 'قسطی')], default='cash', max_length=20)),
                ('body_state', models.CharField(blank=True, choices=[('good', 'سالم'), ('bad', 'رنگ شده')], default='good', max_length=20)),
                ('gearbox_type', models.CharField(blank=True, choices=[('auto', 'اتوماتیک'), ('handy', 'دستی')], default='handy', max_length=20)),
                ('color', models.CharField(max_length=20, null=True)),
                ('nstional_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.car',),
        ),
        migrations.CreateModel(
            name='villaBuy',
            fields=[
                ('room_num', models.IntegerField(default=0)),
                ('year_of_build', models.IntegerField(default=0)),
                ('floor', models.IntegerField(default=1)),
                ('elevator', models.BooleanField(default=True)),
                ('parking', models.BooleanField(default=True)),
                ('depot', models.BooleanField(default=True)),
                ('apartmant_Property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
                ('balkony', models.BooleanField(default=True)),
                ('nstional_id', models.CharField(blank=True, max_length=20, null=True)),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.property',),
        ),
        migrations.CreateModel(
            name='villaRent',
            fields=[
                ('room_num', models.IntegerField(default=0)),
                ('year_of_build', models.IntegerField(default=0)),
                ('floor', models.IntegerField(default=1)),
                ('elevator', models.BooleanField(default=True)),
                ('parking', models.BooleanField(default=True)),
                ('depot', models.BooleanField(default=True)),
                ('apartmant_Property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
                ('balkony', models.BooleanField(default=True)),
                ('deposit_price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('rent_price', models.DecimalField(decimal_places=3, max_digits=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.property',),
        ),
        migrations.CreateModel(
            name='Booth',
            fields=[
                ('commercial_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Commercial')),
                ('room_num', models.IntegerField(default=0)),
                ('year_of_build', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.commercial',),
        ),
        migrations.CreateModel(
            name='office',
            fields=[
                ('commercial_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='DivarApp.Commercial')),
                ('room_num', models.IntegerField(default=0)),
                ('year_of_build', models.IntegerField(default=0)),
                ('floor', models.IntegerField(default=1)),
                ('elevator', models.BooleanField(default=True)),
                ('parking', models.BooleanField(default=True)),
                ('depot', models.BooleanField(default=True)),
                ('apartmant_Property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Property')),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.commercial', 'DivarApp.property'),
        ),
        migrations.CreateModel(
            name='Industrial',
            fields=[
                ('booth_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='DivarApp.Booth')),
            ],
            options={
                'abstract': False,
            },
            bases=('DivarApp.booth',),
        ),
    ]
